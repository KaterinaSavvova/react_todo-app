{"version":3,"sources":["context.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/AddTodo/AddTodo.js","components/TodosFilter/TodosFilter.js","App.js","index.js"],"names":["Context","React","createContext","TodoItem","todo","title","id","useContext","removeTodo","toggleTodo","changeTodo","useState","classes","setClasses","newTitle","setNewTitle","newClasses","classNames","completed","editing","className","type","checked","onChange","onDoubleClick","onClick","value","target","trimLeft","onKeyUp","key","handleKeyUp","onBlur","TodoList","todos","map","AddTodo","onCreate","setValue","onSubmit","event","preventDefault","trim","placeholder","TodosFilter","setFilter","href","App","setTodos","filter","shownTodos","useMemo","Provider","concat","Date","now","style","display","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98148b69.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Context = React.createContext();\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Context } from '../../context';\n\nexport const TodoItem = ({ todo, title, id }) => {\n  const { removeTodo, toggleTodo, changeTodo } = useContext(Context);\n  const [classes, setClasses] = useState(false);\n  const [newTitle, setNewTitle] = useState(title);\n\n  const newClasses = classNames({\n    completed: todo.completed,\n    editing: classes,\n  });\n\n  const handleKeyUp = (key) => {\n    switch (key) {\n      case 'Enter':\n        if (newTitle) {\n          changeTodo(id, newTitle);\n        }\n\n        setClasses(false);\n        break;\n\n      case 'Escape':\n        setClasses(false);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <li className={newClasses}>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          checked={todo.completed}\n          className=\"toggle\"\n          onChange={() => toggleTodo(todo.id)}\n        />\n        <label\n          onDoubleClick={() => setClasses(true)}\n        >\n          {todo.title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => removeTodo(todo.id)}\n        />\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        value={newTitle}\n        onChange={({ target }) => setNewTitle(target.value.trimLeft())}\n        onKeyUp={({ key }) => handleKeyUp(key)}\n        onBlur={() => {\n          newTitle && changeTodo(id, newTitle);\n          setClasses(false);\n        }}\n      />\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.number,\n    completed: PropTypes.bool,\n  }).isRequired,\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\nexport const TodoList = ({ todos }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        todo={todo}\n        key={todo.id}\n        title={todo.title}\n        id={todo.id}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddTodo = ({ onCreate }) => {\n  const [value, setValue] = useState('');\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    if (value.trim()) {\n      onCreate(value);\n\n      setValue('');\n    }\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <input\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={value}\n        onChange={({ target }) => setValue(target.value)}\n      />\n    </form>\n  );\n};\n\nAddTodo.propTypes = {\n  onCreate: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TodosFilter = ({ setFilter }) => (\n  <ul className=\"filters\">\n    <li>\n      <a\n        href=\"#/\"\n        className=\"selected\"\n        onClick={() => setFilter('ALL')}\n      >\n        All\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/active\"\n        className=\"active\"\n        onClick={() => setFilter('ACTIVE')}\n      >\n        Active\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/completed\"\n        className=\"completed\"\n        onClick={() => setFilter('COMPLETED')}\n      >\n        Completed\n      </a>\n    </li>\n  </ul>\n);\n\nTodosFilter.propTypes = {\n  setFilter: PropTypes.func.isRequired,\n};\n","import React, { useState, useMemo } from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Context } from './context';\nimport { AddTodo } from './components/AddTodo/AddTodo';\nimport { TodosFilter } from './components/TodosFilter/TodosFilter';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState('ALL');\n\n  // useEffect(() => {\n  //   fetch('https://mate-api.herokuapp.com/todos')\n  //     .then(response => response.json)\n  //     .then(todos => {\n  //       setTodos(todos.data)\n  //     })\n  // }, [])\n\n  const toggleTodo = (id) => {\n    setTodos(todos.map((todo) => {\n      if (todo.id === id) {\n        return { ...todo, completed: !todo.completed };\n      }\n\n      return todo;\n    }));\n  };\n\n  const removeTodo = (id) => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  const addTodo = (title) => {\n    setTodos(todos.concat([{\n      title,\n      id: Date.now(),\n      completed: false,\n    }]));\n  };\n\n  const shownTodos = useMemo(() => todos.filter((todo) => {\n    switch (filter) {\n      case 'ACTIVE':\n        return !todo.completed;\n      case 'COMPLETED':\n        return todo.completed;\n      default:\n        return todo;\n    }\n  }), [filter, todos]);\n\n  const changeTodo = (id, title) => {\n    setTodos(todos.map((todo) => {\n      if (todo.id !== id) {\n        return todo;\n      }\n\n      return { ...todo, title };\n    }));\n  };\n\n  return (\n    <Context.Provider value={{ removeTodo, toggleTodo, changeTodo }}>\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos App</h1>\n\n          <AddTodo onCreate={addTodo} />\n        </header>\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <TodoList todos={shownTodos} />\n        </section>\n\n        {todos.length !== 0\n        && (\n          <footer className=\"footer\">\n            <span className=\"todo-count\">\n              {`${\n                (todos.filter(todo => todo.completed === false)).length\n              } items left`\n              }\n            </span>\n\n            <TodosFilter setFilter={setFilter} />\n\n            {(todos.filter(todo => todo.completed)).length > 0\n              && (\n                <button\n                  type=\"button\"\n                  className=\"clear-completed\"\n                  onClick={() => {\n                    setTodos(shownTodos.filter(todo => !todo.completed));\n                  }}\n                >\n                  Clear completed\n                </button>\n              )\n            }\n          </footer>\n        )\n        }\n      </section>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}